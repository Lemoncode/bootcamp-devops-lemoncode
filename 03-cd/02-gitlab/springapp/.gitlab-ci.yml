stages:
  - build
  - test
  - maven-deploy
  - docker
  - deploy

default:
  cache:
    - key: default-m2-repository
      paths:
        - .m2/repository

variables:
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss,SSS -Djava.awt.headless=true"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -U -s settings.xml"

maven-build:
  image: maven:3.9.5-eclipse-temurin-21
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean compile package -DskipTests
  artifacts:
    when: on_success
    paths:
      - "target/*.jar"

    

maven-tests:
  image: maven:3.9.5-eclipse-temurin-21
  stage: test
  dependencies: []
  script:
    - mvn $MAVEN_CLI_OPTS validate verify
  artifacts:
    when: on_success
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml


maven-deploy:
  image: maven:3.9.5-eclipse-temurin-21
  stage: maven-deploy
  dependencies: []
  script:
    - mvn $MAVEN_CLI_OPTS deploy -DskipTests


docker-build:
  stage: docker
  dependencies:
    - maven-build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY/$CI_PROJECT_PATH
  script:
    - echo $CI_REGISTRY $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA . 
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  cache: []

deploy:
  stage: deploy
  dependencies: []
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY/$CI_PROJECT_PATH
    - if [[ "$(docker ps -a --filter "name=springapp" --format '{{.Names}}')" == "springapp" ]]; then  docker rm -f springapp; else echo "No existe";  fi
  script:
    - docker run --name "springapp" -d -p 8082:8080 $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  cache: []
