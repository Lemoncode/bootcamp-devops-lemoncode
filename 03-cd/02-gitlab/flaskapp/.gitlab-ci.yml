stages:
  - build
  - deploy
  - release


build:
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY/$CI_PROJECT_PATH
  script:
    - echo $CI_REGISTRY $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/flaskapp:$CI_COMMIT_SHA . 
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/flaskapp:$CI_COMMIT_SHA
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop" ||$CI_COMMIT_BRANCH == "master"'
    
deploy-test:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY/$CI_PROJECT_PATH
    - if [[ "$(docker ps -a --filter "name=flaskapptest" --format '{{.Names}}')" == "flaskapptest" ]]; then  docker rm -f flaskapptest; else echo "No existe";  fi
  script:
    - docker run --name "flaskapptest" -d -p 8081:8080 $CI_REGISTRY/$CI_PROJECT_PATH/flaskapp:$CI_COMMIT_SHA
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
  environment: test
   
deploy-prod:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY/$CI_PROJECT_PATH
    - if [[ "$(docker ps -a --filter "name=flaskapp$" --format '{{.Names}}')" == "flaskapp" ]]; then  docker rm -f flaskapp; else echo "No existe";  fi
  script:
    - docker run --name "flaskapp" -d -p 8080:8080 $CI_REGISTRY/$CI_PROJECT_PATH/flaskapp:$CI_COMMIT_SHA 
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  environment: prod


release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "running release_job"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'ESTA ES LA RELEASE $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'                                      
    assets: 
      links:
        - name: 'Documentation'
          url: 'http://gitlab.com:8888/'
          link_type: 'other'
  rules:
    - if: $CI_COMMIT_TAG

